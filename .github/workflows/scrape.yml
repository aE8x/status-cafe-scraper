name: Scrape Daily, Analyze Weekly

on:
  schedule:
    # Runs at 05:00 UTC every day.
    - cron: '0 5 * * *'
  # Allows you to run the entire workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # ===================================================================
  # JOB 1: Scrapes data every day
  # ===================================================================
  scrape:
    runs-on: ubuntu-latest
    # This job will output whether today is the designated analysis day
    outputs:
      is_analysis_day: ${{ steps.check_day.outputs.is_analysis_day }}

    steps:
    - name: Check out repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run the scraper
      run: python scraper.py

    # --- NEW VALIDATION STEP TO PREVENT SILENT FAILURES ---
    - name: Validate Scraper Output
      id: validate_output
      run: |
        # This step is crucial. If the scraper script ran successfully but didn't modify any
        # files, it could mean the website's HTML structure has changed, leading to a silent failure.
        # This check fails the workflow on scheduled runs to trigger an alert.
        # We allow manual runs (workflow_dispatch) to pass, as they might be for re-analysis.
        if [[ -z "$(git status --porcelain)" && "${{ github.event_name }}" == "schedule" ]]; then
          echo "::error::No new data was scraped on a scheduled run. This indicates a potential silent failure. Check the scraper and the target website."
          exit 1
        else
          echo "Scraper output validated. New data was found, or the workflow was triggered manually."
        fi

    - name: Commit and push scraped data
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions-bot@github.com"
        git add data/statuses.json
        # Commit only if there are changes
        git diff --staged --quiet || git commit -m "Chore: Update scraped data"
        git push

    - name: Check if today is analysis day (Sunday)
      id: check_day
      # This step checks if the current day of the week is Sunday (7).
      # date -u +%u returns 1 for Monday, ..., 7 for Sunday.
      # You can change '7' to '1' for Monday, '2' for Tuesday, etc.
      run: |
        if [ $(date -u +%u) -eq 7 ]; then
          echo "is_analysis_day=true" >> $GITHUB_OUTPUT
        else
          echo "is_analysis_day=false" >> $GITHUB_OUTPUT
        fi

  # ===================================================================
  # JOB 2: Runs analysis only on the scheduled day or on manual trigger
  # ===================================================================
  analyze:
    # This job needs the 'scrape' job to finish first
    needs: scrape
    # CONDITION: Run this job IF it's the scheduled analysis day OR if the workflow was triggered manually
    if: needs.scrape.outputs.is_analysis_day == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Download NLTK data
      # This is a best practice for CI to download data explicitly
      run: python -m nltk.downloader stopwords wordnet averaged_perceptron_tagger

    - name: Run the analyzer script
      # Note the path to the script inside the 'analysis' folder
      run: python analysis/topic_modelling_analysis.py

    - name: Commit and push analysis report
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions-bot@github.com"
        # Only proceed if the report file exists
        if [ -f "analysis/analysis_reports.json" ]; then
          echo "Analysis report found. Committing changes."
          git add analysis/analysis_reports.json
          git diff --staged --quiet || git commit -m "Feat: Generate weekly analysis report"
          git push
        else
          echo "No analysis report generated. Skipping commit."
        fi
